[
    {
        "label": "Model",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "SqliteDatabase",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "DecimalField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "Model",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "ForeignKeyField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "DateTimeField",
        "importPath": "peewee",
        "description": "peewee",
        "isExtraImport": true,
        "detail": "peewee",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Blueprint",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Goods",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Goods",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Goods",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Goods",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "initialize_database",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Counter",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "operator",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "operator",
        "description": "operator",
        "detail": "operator",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "blueprints",
        "importPath": "routes",
        "description": "routes",
        "isExtraImport": true,
        "detail": "routes",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "models.customer",
        "description": "models.customer",
        "peekOfCode": "class Customer(Model):\n    id = IntegerField(primary_key=True)\n    table = IntegerField()\n    class Meta:\n        database = db",
        "detail": "models.customer",
        "documentation": {}
    },
    {
        "label": "db",
        "kind": 5,
        "importPath": "models.db",
        "description": "models.db",
        "peekOfCode": "db = SqliteDatabase('my_database.db')",
        "detail": "models.db",
        "documentation": {}
    },
    {
        "label": "Goods",
        "kind": 6,
        "importPath": "models.goods",
        "description": "models.goods",
        "peekOfCode": "class Goods(Model):\n    name = CharField()\n    price = DecimalField()\n    categori=DecimalField()\n    class Meta:\n        database = db",
        "detail": "models.goods",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "models.order",
        "description": "models.order",
        "peekOfCode": "class Order(Model):\n    customer = ForeignKeyField(Customer, backref=\"orders\")\n    good = ForeignKeyField(Goods, backref=\"orders\")\n    order_date = DateTimeField()\n    class Meta:\n        database = db",
        "detail": "models.order",
        "documentation": {}
    },
    {
        "label": "api_bp",
        "kind": 5,
        "importPath": "routes.api.base",
        "description": "routes.api.base",
        "peekOfCode": "api_bp = Blueprint(\"api\", __name__, url_prefix=\"/api\")",
        "detail": "routes.api.base",
        "documentation": {}
    },
    {
        "label": "good_of_numberpiece",
        "kind": 2,
        "importPath": "routes.api.good_of_numberpiece",
        "description": "routes.api.good_of_numberpiece",
        "peekOfCode": "def good_of_numberpiece():\n    try:\n        # Goodsテーブルから全てのデータを取得\n        goods = Goods.select()\n        orders = Order.select()\n    except Exception as e:\n        # データベースエラーの場合は適切なレスポンスを返す\n        return jsonify({\"error\": \"Database query failed\", \"details\": str(e)}), 500\n   # 各商品IDの個数をカウント\n    id_count = {}",
        "detail": "routes.api.good_of_numberpiece",
        "documentation": {}
    },
    {
        "label": "number_of_usage_by_table",
        "kind": 2,
        "importPath": "routes.api.number_of_usage_by_table",
        "description": "routes.api.number_of_usage_by_table",
        "peekOfCode": "def number_of_usage_by_table():\n    customers = Customer.select()\n    print(\"data\", customers)\n    data = [{\"id\": customer.id, \"table\": customer.table} for customer in customers]\n    table_data = [entry[\"table\"] for entry in data]\n    table_usage_count = Counter(table_data)\n    total_usage_count = sum(table_usage_count.values())\n    response_data = {\n        \"table_usage\": sorted(\n            [",
        "detail": "routes.api.number_of_usage_by_table",
        "documentation": {}
    },
    {
        "label": "sales_by_day",
        "kind": 2,
        "importPath": "routes.api.sales_by_day",
        "description": "routes.api.sales_by_day",
        "peekOfCode": "def sales_by_day():\n    orders = Order.select()\n    amount_data = [0,0,0,0,0,0,0]\n    for element in orders:\n        _weekday = element.order_date.weekday()\n        amount_data[_weekday] += int(element.good.price)\n    data = {\n        \"月曜日\": amount_data[0],\n        \"火曜日\": amount_data[1],\n        \"水曜日\": amount_data[2],",
        "detail": "routes.api.sales_by_day",
        "documentation": {}
    },
    {
        "label": "sales_by_good",
        "kind": 2,
        "importPath": "routes.api.sales_by_good",
        "description": "routes.api.sales_by_good",
        "peekOfCode": "def sales_by_good():\n    orders = Order.select()\n    print(\"data\", orders)\n    l = []\n    sumprice = []\n    data = []\n    for order in orders:\n        if l.count(order.good.name) <= 0:\n            l.append(order.good.name)\n            sumprice.append(float(order.good.price))",
        "detail": "routes.api.sales_by_good",
        "documentation": {}
    },
    {
        "label": "get_sales_per_customer",
        "kind": 2,
        "importPath": "routes.api.sales_per_customer",
        "description": "routes.api.sales_per_customer",
        "peekOfCode": "def get_sales_per_customer():\n    # データベースから客のidの紐付けリストを取得\n    customers = Customer.select()\n    # 配列に整理\n    customers_array = [{\"id\": customer.id, \"table\": customer.table} for customer in customers]\n    data = []\n    for customer in customers_array:##客の数だけforループ\n        customer_id = customer[\"id\"]\n        # その客に合致する注文のリストを表示\n        orders = Order.select().where(Order.customer == customer_id)",
        "detail": "routes.api.sales_per_customer",
        "documentation": {}
    },
    {
        "label": "list",
        "kind": 2,
        "importPath": "routes.customer",
        "description": "routes.customer",
        "peekOfCode": "def list():\n    # データ取得\n    customer = Customer.select()\n    return render_template('customer_list.html', title='客一覧', customers=customer)\n@customer_bp.route('/add', methods=['GET', 'POST'])\ndef add():\n    if request.method == 'POST':\n        table = request.form['table']\n        Customer.create(table=table)\n        return redirect(url_for('customer.list'))",
        "detail": "routes.customer",
        "documentation": {}
    },
    {
        "label": "add",
        "kind": 2,
        "importPath": "routes.customer",
        "description": "routes.customer",
        "peekOfCode": "def add():\n    if request.method == 'POST':\n        table = request.form['table']\n        Customer.create(table=table)\n        return redirect(url_for('customer.list'))\n    return render_template('customer_add.html')\n@customer_bp.route('/edit/<int:customer_id>', methods=['GET', 'POST'])\ndef edit(customer_id):\n    customer = Customer.get_or_none(Customer.id == customer_id)\n    if not customer:",
        "detail": "routes.customer",
        "documentation": {}
    },
    {
        "label": "edit",
        "kind": 2,
        "importPath": "routes.customer",
        "description": "routes.customer",
        "peekOfCode": "def edit(customer_id):\n    customer = Customer.get_or_none(Customer.id == customer_id)\n    if not customer:\n        return redirect(url_for('customer.list'))\n    if request.method == 'POST':\n        customer.table = request.form['table']\n        customer.save()\n        return redirect(url_for('customer.list'))\n    return render_template('customer_edit.html', customer=customer)",
        "detail": "routes.customer",
        "documentation": {}
    },
    {
        "label": "customer_bp",
        "kind": 5,
        "importPath": "routes.customer",
        "description": "routes.customer",
        "peekOfCode": "customer_bp = Blueprint('customer', __name__, url_prefix='/customers')\n@customer_bp.route('/')\ndef list():\n    # データ取得\n    customer = Customer.select()\n    return render_template('customer_list.html', title='客一覧', customers=customer)\n@customer_bp.route('/add', methods=['GET', 'POST'])\ndef add():\n    if request.method == 'POST':\n        table = request.form['table']",
        "detail": "routes.customer",
        "documentation": {}
    },
    {
        "label": "list",
        "kind": 2,
        "importPath": "routes.goods",
        "description": "routes.goods",
        "peekOfCode": "def list():\n    goods = Goods.select()\n    return render_template(\"goods_list.html\", title=\"商品一覧\", items=goods)\n@goods_bp.route(\"/add\", methods=[\"GET\", \"POST\"])\ndef add():\n    # POSTで送られてきたデータは登録\n    if request.method == \"POST\":\n        name = request.form[\"name\"]\n        price = request.form[\"price\"]\n        categori = request.form[\"categori\"]",
        "detail": "routes.goods",
        "documentation": {}
    },
    {
        "label": "add",
        "kind": 2,
        "importPath": "routes.goods",
        "description": "routes.goods",
        "peekOfCode": "def add():\n    # POSTで送られてきたデータは登録\n    if request.method == \"POST\":\n        name = request.form[\"name\"]\n        price = request.form[\"price\"]\n        categori = request.form[\"categori\"]\n        Goods.create(name=name, price=price, categori=categori)\n        return redirect(url_for(\"goods.list\"))\n    return render_template(\"goods_add.html\")\n@goods_bp.route(\"/edit/<int:good_id>\", methods=[\"GET\", \"POST\"])",
        "detail": "routes.goods",
        "documentation": {}
    },
    {
        "label": "edit",
        "kind": 2,
        "importPath": "routes.goods",
        "description": "routes.goods",
        "peekOfCode": "def edit(good_id):\n    good = Goods.get_or_none(Goods.id == good_id)\n    if not good:\n        return redirect(url_for(\"goods.list\"))\n    if request.method == \"POST\":\n        good.name = request.form[\"name\"]\n        good.price = request.form[\"price\"]\n        good.categori = request.form[\"categori\"]\n        good.save()\n        return redirect(url_for(\"goods.list\"))",
        "detail": "routes.goods",
        "documentation": {}
    },
    {
        "label": "goods_bp",
        "kind": 5,
        "importPath": "routes.goods",
        "description": "routes.goods",
        "peekOfCode": "goods_bp = Blueprint(\"goods\", __name__, url_prefix=\"/goods\")\n@goods_bp.route(\"/\")\ndef list():\n    goods = Goods.select()\n    return render_template(\"goods_list.html\", title=\"商品一覧\", items=goods)\n@goods_bp.route(\"/add\", methods=[\"GET\", \"POST\"])\ndef add():\n    # POSTで送られてきたデータは登録\n    if request.method == \"POST\":\n        name = request.form[\"name\"]",
        "detail": "routes.goods",
        "documentation": {}
    },
    {
        "label": "list",
        "kind": 2,
        "importPath": "routes.order",
        "description": "routes.order",
        "peekOfCode": "def list():\n    orders = Order.select()\n    return render_template(\"order_list.html\", title=\"注文一覧\", items=orders)\n@order_bp.route(\"/add\", methods=[\"GET\", \"POST\"])\ndef add():\n    if request.method == \"POST\":\n        customer_id = request.form[\"customer_id\"]\n        good_id = request.form[\"good_id\"]\n        order_date = datetime.now()\n        Order.create(customer=customer_id, good=good_id, order_date=order_date)",
        "detail": "routes.order",
        "documentation": {}
    },
    {
        "label": "add",
        "kind": 2,
        "importPath": "routes.order",
        "description": "routes.order",
        "peekOfCode": "def add():\n    if request.method == \"POST\":\n        customer_id = request.form[\"customer_id\"]\n        good_id = request.form[\"good_id\"]\n        order_date = datetime.now()\n        Order.create(customer=customer_id, good=good_id, order_date=order_date)\n        return redirect(url_for(\"order.list\"))\n    customers = Customer.select()\n    goods = Goods.select()\n    return render_template(\"order_add.html\", customers=customers, goods=goods)",
        "detail": "routes.order",
        "documentation": {}
    },
    {
        "label": "edit",
        "kind": 2,
        "importPath": "routes.order",
        "description": "routes.order",
        "peekOfCode": "def edit(order_id):\n    order = Order.get_or_none(Order.id == order_id)\n    if not order:\n        return redirect(url_for(\"order.list\"))\n    if request.method == \"POST\":\n        order.customer = request.form[\"customer_id\"]\n        order.good = request.form[\"good_id\"]\n        order.save()\n        return redirect(url_for(\"order.list\"))\n    customers = Customer.select()",
        "detail": "routes.order",
        "documentation": {}
    },
    {
        "label": "order_bp",
        "kind": 5,
        "importPath": "routes.order",
        "description": "routes.order",
        "peekOfCode": "order_bp = Blueprint(\"order\", __name__, url_prefix=\"/orders\")\n@order_bp.route(\"/\")\ndef list():\n    orders = Order.select()\n    return render_template(\"order_list.html\", title=\"注文一覧\", items=orders)\n@order_bp.route(\"/add\", methods=[\"GET\", \"POST\"])\ndef add():\n    if request.method == \"POST\":\n        customer_id = request.form[\"customer_id\"]\n        good_id = request.form[\"good_id\"]",
        "detail": "routes.order",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def index():\n    return render_template('index.html')\nif __name__ == '__main__':\n    app.run(port=8080, debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\n# データベースの初期化\ninitialize_database()\n# 各Blueprintをアプリケーションに登録 \nfor blueprint in blueprints:\n    app.register_blueprint(blueprint)\n# ホームページのルート\n@app.route('/')\ndef index():\n    return render_template('index.html')",
        "detail": "app",
        "documentation": {}
    }
]